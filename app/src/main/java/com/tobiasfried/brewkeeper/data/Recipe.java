package com.tobiasfried.brewkeeper.data;

import java.util.ArrayList;
import java.util.List;

import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;

import com.tobiasfried.brewkeeper.constants.*;

import static com.tobiasfried.brewkeeper.data.Recipe.TABLE_NAME;

@Entity(tableName = TABLE_NAME)
public class Recipe {

    public static final String TABLE_NAME = "recipes";
    private static final String LOG_TAG = Recipe.class.getSimpleName();

    // MEMBER FIELDS

    // Recipe ID
    @PrimaryKey(autoGenerate = true)
    private int id;

    // Recipe Name
    private String name;


    // Tea
    @ForeignKey(entity = Ingredient.class, parentColumns = "id", childColumns = "teaId")
    private long teaId;
    @Ignore
    private Ingredient tea;

    // Tea Amount
    private int teaAmount;

    // Primary Sweetener
    private int primarySweetener;

    // Primary Sweetener Amount
    private int primarySweetenerAmount;

    // Secondary Sweetener
    private int secondarySweetener;

    // Secondary Sweetener Amount
    private int secondarySweetenerAmount;

    // Ingredient One
    @ForeignKey(entity = Ingredient.class, parentColumns = "id", childColumns = "ingredientOneId")
    private long ingredientOneId;

    // Ingredient Two
    @ForeignKey(entity = Ingredient.class, parentColumns = "id", childColumns = "ingredientTwoId")
    private long ingredientTwoId;

    // Ingredient Three
    @ForeignKey(entity = Ingredient.class, parentColumns = "id", childColumns = "ingredientThreeId")
    private long ingredientThreeId;

    // Ingredient List to be populated during query with ingredients
    @Ignore
    private List<Ingredient> ingredients;

    // CONSTRUCTORS

    /**
     * Constructor for programmatic use
     *
     * @param name                     Recipe name
     * @param tea                      Tea {@link Ingredient}
     * @param teaAmount                in grams
     * @param primarySweetener         {@link Ingredient}
     * @param primarySweetenerAmount   in grams
     * @param secondarySweetener       {@link Ingredient}
     * @param secondarySweetenerAmount in grams
     * @param ingredients              ArrayList<{@link Ingredient}>
     */
    public Recipe(String name, Ingredient tea, int teaAmount, int primarySweetener,
                  int primarySweetenerAmount, int secondarySweetener,
                  int secondarySweetenerAmount, List<Ingredient> ingredients) {
        this.name = name;

        if (tea.getType() == IngredientType.TEA) {
            this.tea = tea;
        } else throw new IllegalArgumentException("Invalid tea ingredient");

        this.teaAmount = teaAmount;

        if (primarySweetener >= 0 && primarySweetener <= 5) {
            this.primarySweetener = primarySweetener;
        } else throw new IllegalArgumentException("Invalid sweetener ingredient");

        this.primarySweetenerAmount = primarySweetenerAmount;

        if (secondarySweetener >= 0 && secondarySweetener <= 5) {
            this.secondarySweetener = secondarySweetener;
        } else throw new IllegalArgumentException("Invalid sweetener ingredient");

        this.secondarySweetenerAmount = secondarySweetenerAmount;

        this.ingredients = new ArrayList<>();
        for (Ingredient ingredient : ingredients) {
            if (ingredient.getType() == IngredientType.FLAVOR) {
                this.ingredients.add(ingredient);
            } else throw new IllegalArgumentException("Invalid flavor ingredient");
        }
    }

    /**
     * Constructor for Room use only
     *
     * @param id                       Autogenerated
     * @param name                     Recipe name
     * @param teaId                    references ingredient_id in ingredients table
     * @param teaAmount                in grams
     * @param primarySweetener         int from [0,5]
     * @param primarySweetenerAmount   in grams
     * @param secondarySweetener       int from [0,5]
     * @param secondarySweetenerAmount in grams
     * @param ingredientOneId          references ingredient_id in ingredients table
     * @param ingredientTwoId          references ingredient_id in ingredients table
     * @param ingredientThreeId        references ingredient_id in ingredients table
     */
    public Recipe(int id, String name, long teaId, int teaAmount, int primarySweetener,
                  int primarySweetenerAmount, int secondarySweetener,
                  int secondarySweetenerAmount, long ingredientOneId,
                  long ingredientTwoId, long ingredientThreeId) {
        this.id = id;
        this.name = name;
        this.teaId = teaId;
        this.teaAmount = teaAmount;
        this.primarySweetener = primarySweetener;
        this.primarySweetenerAmount = primarySweetenerAmount;
        this.secondarySweetener = secondarySweetener;
        this.secondarySweetenerAmount = secondarySweetenerAmount;
        this.ingredientOneId = ingredientOneId;
        this.ingredientTwoId = ingredientTwoId;
        this.ingredientThreeId = ingredientThreeId;
    }

    /**
     * Empty constructor for entry activity
     */
    @Ignore
    public Recipe() {

    }

    // GETTERS

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public long getTeaId() {
        return teaId;
    }

    public Ingredient getTea() {
        return tea;
    }

    public int getTeaAmount() {
        return teaAmount;
    }

    public int getPrimarySweetener() {
        return primarySweetener;
    }

    public int getPrimarySweetenerAmount() {
        return primarySweetenerAmount;
    }

    public int getSecondarySweetener() {
        return secondarySweetener;
    }

    public int getSecondarySweetenerAmount() {
        return secondarySweetenerAmount;
    }

    public long getIngredientOneId() {
        return ingredientOneId;
    }

    public long getIngredientTwoId() {
        return ingredientTwoId;
    }

    public long getIngredientThreeId() {
        return ingredientThreeId;
    }

    public List<Ingredient> getIngredients() {
        return ingredients;
    }

    // SETTERS

    public void setId(int id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setTeaId(long teaId) {
        this.teaId = teaId;
    }

    public void setTea(Ingredient tea) {
        this.tea = tea;
    }

    public void setTeaAmount(int teaAmount) {
        this.teaAmount = teaAmount;
    }

    public void setPrimarySweetener(int primarySweetener) {
        this.primarySweetener = primarySweetener;
    }

    public void setPrimarySweetenerAmount(int primarySweetenerAmount) {
        this.primarySweetenerAmount = primarySweetenerAmount;
    }

    public void setSecondarySweetener(int secondarySweetener) {
        this.secondarySweetener = secondarySweetener;
    }

    public void setSecondarySweetenerAmount(int secondarySweetenerAmount) {
        this.secondarySweetenerAmount = secondarySweetenerAmount;
    }

    public void setIngredientOneId(long ingredientOneId) {
        this.ingredientOneId = ingredientOneId;
    }

    public void setIngredientTwoId(long ingredientTwoId) {
        this.ingredientTwoId = ingredientTwoId;
    }

    public void setIngredientThreeId(long ingredientThreeId) {
        this.ingredientThreeId = ingredientThreeId;
    }

    public void setIngredients(List<Ingredient> ingredients) {
        this.ingredients = ingredients;
    }
}
